/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    `java-library`
    `maven-publish`
    id("java")
    id("com.github.johnrengelman.shadow") version "8.1.1" // Shadowプラグインを追加
}


group = "org.epj"
version = "1.0-SNAPSHOT"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    jcenter()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api(libs.commons.math3)

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation(libs.guava)

    // PDFBox
    implementation("org.apache.pdfbox:pdfbox:2.0.26")

    // Apache POI for Excel (OOXML)
    implementation("org.apache.poi:poi-ooxml:5.2.2")

    // Excel Cell Formatter
    implementation("com.github.mygreen:excel-cellformatter:0.10")

    // SLF4J with Log4j 2 binding
    implementation("org.apache.logging.log4j:log4j-slf4j-impl:2.17.2")

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
}

tasks.register<Jar>("ExcelToJar") {
    archiveBaseName.set("ExcelTo")
    manifest {
        attributes["Main-Class"] = "org.epj.ExcelTo"
    }
    from(sourceSets.main.get().output)
}

tasks.register<Jar>("ParserJar") {
    archiveBaseName.set("Parser")
    manifest {
        attributes["Main-Class"] = "org.epj.Parser"
    }
    from(sourceSets.main.get().output)
}

// 必要に応じて他のクラスのタスクも追加
